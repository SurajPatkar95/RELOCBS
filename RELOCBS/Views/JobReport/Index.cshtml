@using RELOCBS.Utility;
@using RELOCBS.Common;
@{

    ViewBag.Title = "Job Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string _PageID = "20";
    string param = "MoveID=ParamValue";
    bool hasAddAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.ADD);
    bool hasEditAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.EDIT);
    bool hasDeleteAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.DELETE);
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { @name = "CustomFilter", @id = "CustomFilter", @class = "form-inline" }))
{
    @Html.AntiForgeryToken()
    <div id="main" class="m-t-sm">
        <div class="pnl-filter  row">
            <div class="form-group col-md-4 border-grey pad-10">
                <label class="clearfix m-r-sm">Select Job Type </label>
                <label class="radio-inline font-bold">
                    @Html.RadioButton("JobType", "1", Convert.ToInt16(ViewData["SelectedJobType"]) == 1 ? true : false)Regular Job
                </label>
                <label class="radio-inline font-bold">
                    @Html.RadioButton("JobType", "0", (Convert.ToInt16(ViewData["SelectedJobType"]) == 0 ? true : false)) Warehouse Job
                </label>
                
            </div>
            <div class="col-md-8 border-grey pad-10">
                <label class="checkbox-inline font-bold">
                    @Html.CheckBox("IsPackStart", Convert.ToBoolean(ViewData["IsPackStartChecked"]) ,new { @class = "chb" })Pack/Delivery Start
                </label>
                <label class="checkbox-inline font-bold m-r-sm">
                    @Html.CheckBox("IsPackComplete", Convert.ToBoolean(ViewData["IsPackCompleteChecked"]), new { @class = "chb" })Pack/Delivery Completion
                </label>
                <label for="" class="col-form-label ">From Date</label>
                @Html.TextBox("FromDate", null, new { @placeholder = "From Date", @tooltip = "From Date", @class = "form-control input-sm datetimepicker m-r-sm", id = "FromDate" })
                <label for="" class="col-form-label">To Date</label>
                @Html.TextBox("ToDate", null, new { @placeholder = "To Date", @tooltip = "To Date", @class = "form-control input-sm datetimepicker", id = "ToDate" })
            </div>
        </div>
        <div class="row no-gutters">
            
            <div class="col-sm-2 col-md-2 shipper-search-div">
                <div class="form-group">
                    <label>Shipper</label>
                    <div class="input-group input-group-sm">
                        @Html.Editor("Shipper", new { htmlAttributes = new { @placeholder = "Shipper Name", @tooltip = "Shipper", @class = "form-control input-sm ", title = "Shipper", id = "Shipper" } })
                        @*@Html.DropDownList("EnqId", new SelectList((System.Collections.IEnumerable)ViewData["JobReportList"], "Value", "Text", ViewData["ContainerList"]), "Select One", new { @class = "form-control", id = "EnqID", title = "EnqID" })*@
                    </div>
                </div>
            </div>
            <div class="col-sm-2 col-md-2">
                <div class="form-group">
                    <label>Job No</label>
                    @Html.DropDownList("JobNo", new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text", ViewData["MoveId"]), "Select Job No", new { @class = "form-control input-sm" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label>Job Status</label>
                    @Html.DropDownList("Status", new SelectList((System.Collections.IEnumerable)ViewData["StatusList"], "Value", "Text"), "Select Status", new { @class = "form-control input-sm enableselect" })
                </div>
            </div>
            <div class="form-group col-md-1">
                <div class="clearfix">
                    <input type="submit" id="btnSearch" name="Search" class="btn btn-primary btn-sm filter-custom-margin" value="Search" />
                </div>
            </div>
            @*<div class="form-group col-md-1 hide">
            <div class="clearfix">
                <a id="btnCreate" name="Create" class="btn btn-primary m-t-sm m-b-sm m-r-sm btn-sm filter-custom-margin" value="New JR" formnovalidate="formnovalidate" href="@Url.Action("Create", "JobReport",new { Key = "-1"})" title="Create">Create</a>
            </div>
        </div>*@
        </div>
    </div>


}
<div id="mgrid">
    @Html.Partial("_AjaxPartial")
</div>

<div id="mdlAddEdit" class="modal fade" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">

        </div>
    </div>
</div>


@section Scripts{
    <script type="text/javascript">
        @*$('#JobNo').change(function () {
            debugger;
            var JobNo = $(this).val();

            if (JobNo != null && JobNo!="") {

                $.get("@Url.Action("GetaJAXQueryString", "JobReport")", { JobNo: JobNo },
                function (data) {

                    //alert(data.AccountMgr);
                    var url = $("#btnCreate").attr('href');
                    url = url.replace('-1', data.querystring);
                    $("#btnCreate").attr('href',url);
                });
            }
        });*@

        $(".chb").change(function () {
            $(".chb").not(this).prop('checked', false);
        });

        $(document).ready(function () {

            $('#FromDate,#ToDate,#TentDate').on('focus', function () {
                $(this).siblings('.input-group-addon').click();
            });

            $('.datetimepicker').datetimepicker({
                format: "DD-MMM-YYYY",
                widgetPositioning: {
                    horizontal: 'right',
                    vertical: 'bottom'
                }
            });

            PagedOnCompleteBinds();

            AutoDropFill();

            $('body').on('hidden.bs.modal', '.modal', function () {
                $(this).removeData('bs.modal');
            });

            pageGrids.mainGrid.onRowSelect(function (e) {
                console.log($('#pnlGridTopActions #btnEdit, #pnlGridTopActions #btnDelete').length)
                $('#pnlGridTopActions #btnEdit, #pnlGridTopActions #btnDelete').removeAttr('disabled');
                $('#pnlGridTopActions #btnEdit').on('click', function (ev) {
                    ev.preventDefault();
                    $('#mgrid tr.grid-row.grid-row-selected').find('.btnEdit').click();
                });
                $('#pnlGridTopActions #btnDelete').on('click', function (ev) {
                    ev.preventDefault();
                    $('#mgrid tr.grid-row.grid-row-selected').find('.btnDelete').click();
                });
            });

            $('form#CustomFilter').on('submit', function (e) {
                e.preventDefault();
                $(this).ajaxSubmit({
                    target: '#mgrid',
                    success: function () {
                        PagedOnCompleteBinds();
                    }
                });
            });

            $('#Shipper').on('change', function () {
                loadJobNo(false);
            });

            SwitchSearchType();
        });

        $('input[type=radio][name=JobType]').change(function () {

            SwitchSearchType();
        });


        function SwitchSearchType() {

            var shipperdiv = $(".shipper-search-div");
            var IsWarehouse = false;
            var SelectedJobType = $("input[name='JobType']:checked").val();
            if (SelectedJobType == '1') {
                shipperdiv.removeClass('hide');
            }
            else {

                shipperdiv.addClass('hide');
                IsWarehouse = true;
            }

            loadJobNo(IsWarehouse);

        }


        function loadJobNo(IsWarehouse = false) {
            debugger;
            var url = !IsWarehouse ? '@Url.Action("GetJobNoList", "Combo")' : '@Url.Action("GetWarehouseJobNoList", "Combo")';
            var ShipperText = $('#Shipper').val();
            if (ShipperText == null || (ShipperText.trim()).length == 0 || (ShipperText.trim()).length >= 3) {

                var name = !IsWarehouse ? { shipper: ShipperText, Type: 'B' } : { Type: 'B' };
                var selectdepartment = $('#JobNo');
                $.getJSON(url, name, function (data) {
                    //selectdepartment.empty();

                    selectdepartment.html('').select2({ data: [{ id: '', text: '' }] });
                    var Default = new Option('Select Job No', '', true, true);
                    selectdepartment.append(Default);
                    //$(selectdepartment).append('<option value=0>Please Select</option>');
                    for (var i = 0; i < data.length; i++) {
                        var newState = new Option(data[i].Text, data[i].Value);
                        // Append it to the select
                        selectdepartment.append(newState);
                    }
                    selectdepartment.trigger('change');
                });
            }
            
        };

        /////search form data
        function PagedOnCompleteBinds() {
            $(document).ready(function () {
                $('select').select2();
                $('.grid-header-title a').on('click', function (e)
                {
                    e.preventDefault();
                    var sturl = "@Url.Action("Index", "JobReport")" + $(this).attr('href');
                    $('form#CustomFilter').attr('action', sturl).submit();
                });

                $('#mgrid .pagination li a').on('click', function (e) {
                    e.preventDefault();

                    e.stopImmediatePropagation();
                    var sturl = $('#mgrid .sorted.grid-header-title a').attr('href');
                    if (typeof sturl != 'undefined') {
                        var gdir = url("?grid-dir", sturl);
                        var gcol = url("?grid-column", sturl);
                        sturl = sturl.replace(/grid-dir=\d+/i, 'grid-dir=' + (parseInt(gdir) == 0) ? 1 : 0);
                        sturl = sturl.replace('?', '&');
                    }

                    var sturl2 = $(this).attr('href');
                    if (sturl2 == undefined) {
                        sturl2 = "@Url.Action("Index", "JobReport")?page=" + parseInt($(this).html());
                    }
                    sturl = sturl2 + sturl.replace(/page=\d+/i, "");
                    $('form#CustomFilter').attr('action', sturl).submit();
                });

                $('form.frmRWDelete').on('submit', function (e) {
                    e.preventDefault();
                    $frmRWDelete = this;
                    swal({
                        title: "Are you sure you want to delete this record?",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "Delete",
                        cancelButtonText: "No",
                        closeOnConfirm: true,
                        closeOnCancel: true
                    },
                        function (isConfirm) {
                            if (isConfirm) {
                                $('#mgrid').mask("Loading...");
                                $($frmRWDelete).ajaxSubmit({
                                    success: function (data) {
                                        if (data.Success) {
                                            toastr.success("Survey deleted successfully.");
                                            $('#mgrid .pagination li.active a').trigger('click');
                                        } else if (!data.Success) {
                                            swal({
                                                text: "JobReport Delete Failed.",
                                                type: "error"
                                            });
                                        }
                                        $('#mgrid').unmask();
                                    },
                                    complete: function () {
                                        $('#mgrid').unmask();
                                    }
                                });
                            } else {
                                swal("", "Job Report Delete Cancelled.", "error");
                            }
                        });
                });
                $('.lnkExportToExcel').on('click', function () {
                    var url = '@Url.Action("ExportToExcel", "Survey", new { })';
                    window.location.href = url;
                });
            });
        }

        function PagedOnComplete(obj) {
            $('#mgrid table').unmask();
            PagedOnCompleteBinds();
        }

        function AutoDropFill() {
            var returnResult = [];
            $.ajax({
                contentType: "application/json; charset=utf-8",
                url: "@Url.Action("GetShipperNameList", "Combo")",
                method: 'GET',
            async: 'false',
            dataType: 'json',
            success: function (result) {
                var data = $.map(result, function (obj) {
                    obj.value = obj.Text; // desired field
                    obj.data = obj.Value; // desired field
                    returnResult.push(obj);
                    $("#Shipper").autocomplete({
                        lookup: returnResult
                    });

                });
            },
            error: function () { }
        });
    }
    </script>
}