@using RELOCBS.Utility;
@using System.Data;
@using PagedList;
@using PagedList.Mvc;
@using GridMvc.Html

@model  List<RELOCBS.Entities.CostEstimateGrid>

@{

    string _PageID = "45";
    bool hasAddAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.ADD);
    bool hasEditAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.EDIT);
    bool hasDeleteAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.DELETE);

}


@Html.Grid(Model).Named("mainGrid").Columns(columns =>
   {

   columns.Add().Encoded(false)
        .Sanitized(false).Css("tdNone")
        .Sortable(false).RenderValueAs(d=>

@<input type="hidden" name="Survey" id="Survey" class="tdSurvey" value="@d.SurveyID" />


);
columns.Add().Encoded(false)
.Sanitized(false).Css("tdNone")
.Sortable(false).RenderValueAs(d =>

@<input type="hidden" name="RateWt" id="RateWt" class="tdRateWt" value="@d.ratecompanyratewtid" />
);
columns.Add().Encoded(false)
.Sanitized(false).Css("tdNone")
.Sortable(false).RenderValueAs(d =>

@<input type="hidden" name="RateCompRateBatchId" id="RateCompRateBatchId" class="tdRateCompRateBatchId" value="@d.RateCompRateBatchId" />
);
//               columns.Add(o => o.FromCity)
//.Titled("From City")
//.Css("col-md-2")
//.SetWidth(2);
columns.Add(o => o.RateCompRateBatchId)
.Titled("Estimation ID").Css("col-md-2").SetWidth(1);
columns.Add(o => o.Exitport)
.Titled("Exitport").Css("col-md-2").SetWidth(2);

columns.Add(o => o.EntryPort)
.Css("col-md-2")
.Titled("EntryPort")
.SetWidth(2);

//   columns.Add(o => o.ToCity)
//.Titled("To City")
//.Css("col-md-2").SetWidth(2);

columns.Add(o => o.WeightFrom)
.Titled("WeightFrom")
.Css("col-md-1").SetWidth(1);

columns.Add(o => o.WtUnit)
.Titled("Weight Unit")
.Css("col-md-1").SetWidth(1);

columns.Add(o => o.TotEstimate)
.Titled("Total Estimate")
.Css("col-md-2").SetWidth(2);


columns.Add()
.Encoded(false)
.Sanitized(false)
.Sortable(false)
.Css("col-md-4").Titled("Actions")
.RenderValueAs(d =>

@<span>

    @if (hasEditAccess)
                {
        <a href="@Url.Action("Edit", "Cost", new {SurveyID = d.SurveyID,RateCompRateWtID = d.ratecompanyratewtid,RateCompRateBatchId = d.RateCompRateBatchId })" class="btnEdit btn btn-xs btn-default glyphicon glyphicon-pencil pull-left" data-cache="false" title="Edit Rate"></a>
                }
    <a onclick="showDetails(this);" id="Details_@d.ratecompanyratewtid" data-id="@d.SurveyID" class="btn btn btn-xs btn-default glyphicon glyphicon-eye-open" data-cache="false" title="Detail Rate"
       data-assigned-id="@d.ratecompanyratewtid" data-batch-id="@d.RateCompRateBatchId" data-toggle="modal" data-target="#exampleModalLong"></a>

    <a id="btnReport" class="btn btn-xs btn-default fa fa-download" href="@Url.Action("GetReport","Cost",new {surveyid = d.SurveyID, Wtid=d.ratecompanyratewtid})" target="_blank"></a>

    <a onclick="GetWHServiceCost(@d.SurveyID,@d.ratecompanyratewtid,@d.RateCompRateBatchId);" id="btnWHServiceCost" class="btnWHServiceCost btn btn-xs btn-default glyphicon glyphicon-list" data-cache="false" title="WH Service Cost"></a>
</span>
);



columns.Add().Encoded(false)
.Sanitized(false)
.Sortable(false)
.Css("col-md-2").Titled("").RenderValueAs(d =>

@<span>

    @if (hasAddAccess)
                {
        <a class="add-btn btn btn-xs btn-default pull-left" data-cache="false" title="Copy Rate" href="@Url.Action("Create", "Cost", new {SurveyID = d.SurveyID,RateCompRateWtID = d.ratecompanyratewtid ,RateCompRateBatchId =d.RateCompRateBatchId})">Copy Rate</a>@*onclick = "CopyRate(this)"*@
                }
    <a class="btn btn-xs btn-default" data-cache="false" title="Apply Quote" href="@Url.Action("Create", "Quotation", new {SurveyID = d.SurveyID,RateCompRateWtID = d.ratecompanyratewtid ,RateCompRateBatchId =d.RateCompRateBatchId})">Apply Quotation</a>
</span>


);

columns.Add()
.Encoded(false)
.Sanitized(false)
.Css("col-md-1").Titled("Delete").RenderValueAs((d) =>

@<div>

    @if (hasDeleteAccess)
                {
        //using (Html.BeginForm("Delete", "Cost", new { SurveyID = d.SurveyID, RateCompRateWtID = d.ratecompanyratewtid }))
        //{
        //    new HtmlString("<input data-confirmprompt='Are you sure?' type='submit' name ='Delete' value='Delete' />");
        //}
        <form method="post" action="@Url.Action("Delete", "Cost", new {SurveyID = d.SurveyID,RateCompRateWtID = d.ratecompanyratewtid,RateCompRateBatchID = d.RateCompRateBatchId })" class="frmRWDelete" title="Delete Cost">
            @Html.AntiForgeryToken()
            @*<input type="hidden" name="SurveyID" value="@d.SurveyID" />
                <input type="hidden" name="RateCompRateWtID" value="@d.ratecompanyratewtid" />*@
            <button type="button" id="btndeleteest" name="action:Delete" class="btnDelete btn btn-xs btn-danger glyphicon glyphicon-trash marl-5"></button>
        </form>

                }
</div>

);

}).Sortable(false).Selectable(false).SetRowCssClasses(item => item.Colour == "A" ? "important" : "nonimportant")

