@model RELOCBS.Entities.InstructionSheet

<div class="ibox-content">
        @Html.HiddenFor(a => a.MoveID)
        @Html.HiddenFor(a => a.InstID)
        <div class="row">
            <div class="col-sm-3 col-md-3">
                <div class="form-group">
                    <strong>Job No. :</strong>&nbsp;<strong>@Html.Raw(Model.JobNo)</strong>
                </div>
            </div>
            <div class="col-sm-2 col-md-2">
                <div class="form-group">
                    <strong>Inst No. :</strong>&nbsp;<strong>@Html.Raw(Model.InstID)</strong>
                </div>
            </div>
            <div class="col-sm-3 col-md-3">
                <div class="form-group">
                    <strong>ServiceLine:</strong>&nbsp;<strong>@Html.Raw(Model.ProjectService + " - " + Model.ServiceLine)</strong>
                </div>
            </div>
            <div class="col-sm-2 col-md-2">
                <div class="form-group">
                    <strong>Status:</strong>&nbsp;<strong>@Html.Raw(Model.Status)</strong>
                </div>
            </div>
        </div>
        <div>
            <div class="row">
                <div class="col-sm-2 form-group">
                    <label>Branch :</label>
                    @Html.DisplayFor(a => a.BranchName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                </div>
                <div class="col-sm-2 form-group">
                    <label>Warehouse :</label>
                    @Html.DisplayFor(a => a.WareHouseName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                </div>
                <div class="col-sm-3 form-group">
                  <label>Goods Description :</label>
                  @Html.DisplayFor(a => a.GoodsDescription, new { htmlAttributes = new { @class = "form-control input-sm" } })
                </div>
                <div class="col-sm-5 form-group">
                   <label>Special Instructions :</label>
                   @Html.TextAreaFor(m => m.SpecialInstructions, new { @class = "form-control customTxt", @readonly="readonly" })
                </div>
            </div>
            <div class="row m-t-none">

                @{
                    if (Model.ProjectService.ToUpper() == "IMP")
                    {
                        <div class="row row-no-gutters">
                            <fieldset class="col-sm-6 border">
                                <legend>Destination Address</legend>
                                <div class="form-group row">
                                    <label for="DestAddrss" class="col-sm-2 col-form-label">Address</label>
                                    <div class="col-sm-10">
                                        @Html.TextAreaFor(a => a.DestAdd1, new { @class = "form-control input-sm", rows = "3", placeholder = "Address 1", title = "DestAddrss1", @id = "DestAddrss1", @readonly = "readonly" })                                        
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="DestAddrss" class="col-sm-2 col-form-label">Address</label>
                                    <div class="col-sm-10">
                                        @Html.TextAreaFor(a => a.DestAdd2, new { @class = "form-control input-sm", rows = "3", placeholder = "Address 2", title = "DestAddrss1", @id = "DestAddrss2", @readonly = "readonly" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="DestCityDropDown" class="col-sm-2 col-form-label">City</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(a => a.DestCity, new { @class = "form-control input-sm", placeholder = "City", title = "City", @id = "DestCity", @readonly = "readonly" })
                                    </div>
                                    <label for="" class="col-sm-1 col-form-label">Pincode</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(a => a.DestPincode, new { @class = "form-control input-sm", placeholder = "Pincode", title = "DestPincode", @id = "DestPincode", @readonly = "readonly" })
                                    </div>
                                </div>
                            </fieldset>
                            <fieldset class="col-sm-6 border m-r-5">
                                <legend>&nbsp;&nbsp;</legend>
                                <div class="form-group row">
                                    <label class="col-sm-2 col-form-label">Client</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(a => a.Client, new { @class = "form-control input-sm", placeholder = "Client", title = "Client", @id = "Client", @readonly = "readonly" })
                                        @*@Html.DropDownListFor(model => model.ClientID, new SelectList((System.Collections.IEnumerable)ViewData["ClientList"], "Value", "Text"), "--Select Client--", new { id = "ClientDropdown", @class = "form-control input-sm clearfix", disabled = "disabled" })*@
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-2 col-form-label">Mode</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(a => a.Mode, new { @class = "form-control input-sm", placeholder = "Mode", title = "Mode", @readonly = "readonly" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-2 col-form-label">Wt/Vol</label>
                                    <div class="col-sm-3">
                                        @Html.EditorFor(model => model.WeightUnit, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                    </div>
                                    <label class="col-sm-1 col-form-label">Weight</label>
                                    <div class="col-sm-2">
                                        @Html.EditorFor(model => model.WeightUnitFrom, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                    </div>
                                    <label class="col-sm-1 col-form-label hide">To</label>
                                    <div class="col-sm-2 hide">
                                        @Html.EditorFor(model => model.WeightUnitTo, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </fieldset>
                        </div>

                        @*Dimesions*@
                        <fieldset class="row col-md-12 m-n pad-none">
                            <legend data-toggle="collapse" data-target="#CaseDim">
                                <i class="more-less glyphicon glyphicon-plus"></i>
                                Case Dimensions
                            </legend>
                            <div class="m-t-sm panel-collapse collapse CollapsingFieldSet" id="CaseDim">
                                <div class="row">
                                    <div class="table-responsive">
                                        <table id="tblCaseDimesions" class="table table-striped table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>CaseType</th>
                                                    <th>Length</th>
                                                    <th>Breadth</th>
                                                    <th>Height</th>
                                                    <th>Unit</th>
                                                    <th>No of Package</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @for (int i = 0; i < Model.Dimensions.Count; i++)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Html.DisplayFor(model => Model.Dimensions[i].CaseType, new { @class = "form-control input-sm clearfix TblCaseType", @readonly = "readonly" })

                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(model => Model.Dimensions[i].Length, new { @class = "form-control input-sm clearfix TblLength" })
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(model => Model.Dimensions[i].Breadth, new { @class = "form-control input-sm clearfix TblBreadth" })
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(model => Model.Dimensions[i].Height, new { @class = "form-control input-sm clearfix TblHeight" })
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(model => @Model.Dimensions[i].UnitName, new { @class = "form-control input-sm clearfix TblUnit", @readonly = "readonly" })

                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(model => Model.Dimensions[i].NoOfPackages, new { @class = "form-control input-sm clearfix TblNoOfPackages" })
                                                        </td>
                                                    </tr>

                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </fieldset>

                    }
                    else if (Model.ProjectService.ToUpper() == "EXP")
                    {
                        <div class="row row-no-gutters">
                            <fieldset class="col-sm-6 border m-r-5">
                                <legend>Origin Address</legend>
                                <div class="form-group row">
                                    <label for="OriginAddrs" class="col-sm-2 col-form-label">Address1</label>
                                    <div class="col-sm-10">
                                        @Html.TextAreaFor(a => a.OrgAdd1, new { @class = "form-control input-sm", rows = "3", placeholder = "Address 1", title = "OriginAddrs1", @id = "OriginAddrs1" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="OriginAddrs" class="col-sm-2 col-form-label">Address2</label>
                                    <div class="col-sm-10">
                                        @Html.TextAreaFor(a => a.OrgAdd2, new { @class = "form-control input-sm", rows = "3", placeholder = "Address 2", title = "OriginAddrs2", @id = "OriginAddrs2" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="DestCityDropDown" class="col-sm-2 col-form-label">City</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(a => a.OrgCity, new { @class = "form-control input-sm", placeholder = "City", title = "City", @id = "OriginCity",@readonly="readonly" })
                                    </div>
                                    <label for="" class="col-sm-1 col-form-label">Pincode</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(a => a.OrgPincode, new { @class = "form-control input-sm", placeholder = "Pincode", title = "OrgPincode", @id = "OrgPincode", @readonly = "readonly" })
                                    </div>
                                </div>
                            </fieldset>
                            <fieldset class="col-sm-6 border m-r-5">
                                <legend>&nbsp;&nbsp;</legend>
                                <div class="form-group row">
                                    <label class="col-sm-2 col-form-label">Shipper</label>
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Shipper, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-2 col-form-label">Corporate</label>
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Corporate, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-2 col-form-label">Wt/Vol</label>
                                    <div class="col-sm-3">
                                        @Html.EditorFor(model => model.WeightUnit, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                    </div>
                                    <label class="col-sm-1 col-form-label">Weight</label>
                                    <div class="col-sm-2">
                                        @Html.EditorFor(model => model.WeightUnitFrom, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                    </div>
                                    <label class="col-sm-1 col-form-label hide">To</label>
                                    <div class="col-sm-2 hide">
                                        @Html.EditorFor(model => model.WeightUnitTo, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                        <div class="row row-no-gutters">
                            <div class="col-md-8 form-group">
                                <fieldset class="col-md-12 table-responsive m-t-sm">
                                    <legend>Instructions</legend> 
                                    <table class="table">
                                        <tbody>
                                            @{int id = 0;}
                                            @for (int i = 0; i < Model.questions.Count; i++)
                                            {

                                                if (!string.IsNullOrWhiteSpace(Model.questions[i].IsSaved) && Model.questions[i].IsSaved.ToUpper() == "YES")
                                                {

                                                    <tr>
                                                        <th class="col-md-1" scope="col">
                                                            @{id = id + 1;}
                                                            &#35; @Html.Raw(id)
                                                        </th>
                                                        <td class="col-md-6">
                                                            <div>
                                                                @Html.DisplayFor(m => m.questions[i].Questions)
                                                            </div>
                                                        </td>
                                                        <td class="col-md-5">
                                                        @if (Model.questions[i].subQuestions != null && Model.questions[i].subQuestions.Count > 0)
                                                        {
                                                            <table class="table table-condensed">
                                                                @for (int j = 0; j < Model.questions[i].subQuestions.Count; j++)
                                                                {
                                                                <tr>
                                                                    <td class="col-md-3">
                                                                      @Html.DisplayFor(m => m.questions[i].subQuestions[j].SubQuestions)
                                                                    </td>
                                                                    <td class="col-md-3">
                                                                      @Html.DisplayFor(m => m.questions[i].subQuestions[j].Answer, new { @class = "form-control input-sm clearfix Answer" })
                                                                    </td>
                                                                </tr>
                                                                }
                                                            </table>
                                                        }
                                                        </td>
                                                    </tr>
                                                }

                                            }
                                        </tbody>
                                    </table>
                                </fieldset>
                            </div>
                            <div class="col-md-4">
                                <div class="table-responsive">
                                    <table id="tblLablePrint" class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>Type</th>
                                                <th>No. Of Labels</th>
                                                <th>Label Start From</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @for (int i = 0; i < Model.modeLables.Count; i++)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.TextBoxFor(model => Model.modeLables[i].ModeName, new { @class = "form-control input-sm clearfix TblModeName", @readonly = "readonly" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(model => Model.modeLables[i].NoOfLables, new { @class = "form-control input-sm clearfix TblNoOfLables", @readonly = "readonly" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(model => Model.modeLables[i].LabelStartFrom, new { @class = "form-control input-sm clearfix TblLabelStartFrom", @readonly = "readonly" })
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                    }
                    else if (Model.ProjectService.ToUpper() == "NMD")
                    {

                        @*Domestic*@
                        <div class="m-t-xs">
                            <div class="row">
                                <div class="col-md-2"><label>Warehouse Instruction sheet :</label></div>
                                <div class="col-md-1">
                                 @if(Model.ComponentTypeID==1)
                                 {
                                    <input type="text" name="country" class = "form-control input-sm clearfix" value="Origin" readonly>
                                 }
                                 else
                                 {
                                    <input type="text" name="country" class = "form-control input-sm clearfix" value="Destination" readonly>
                                 }
                                </div>
                                <div class="col-md-7">
                                    <div class="form-group row">
                                        <label class="col-sm-2 col-form-label">Wt/Vol</label>
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.WeightUnit, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                        </div>
                                        <label class="col-sm-1 col-form-label">Weight</label>
                                        <div class="col-sm-2">
                                            @Html.EditorFor(model => model.WeightUnitFrom, new { htmlAttributes = new { @class = "form-control input-sm clearfix", onkeypress = "return OnlyDouble(this, event);", @readonly = "readonly" } })
                                        </div>
                                        <label class="col-sm-1 col-form-label hide">To</label>
                                        <div class="col-sm-2 hide">
                                            @Html.EditorFor(model => model.WeightUnitTo, new { htmlAttributes = new { @class = "form-control input-sm clearfix", onkeypress = "return OnlyDouble(this, event);", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3  form-group">
                                    <label>Shipper</label>
                                    @Html.EditorFor(model => model.Shipper, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                </div>
                                <div class="col-md-3 form-group">
                                    <label>Corporate</label>
                                    @Html.EditorFor(model => model.Corporate, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                    @Html.HiddenFor(m => m.CorporateID)
                                </div>
                                <div class="col-md-3  form-group">
                                    <label>From</label>
                                    @Html.EditorFor(model => model.OriginCity, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                </div>
                                <div class="col-md-3 form-group">
                                    <label>To</label>
                                    @Html.EditorFor(model => model.DestinationCity, new { htmlAttributes = new { @class = "form-control input-sm clearfix", @readonly = "readonly" } })
                                </div>
                            </div>

                            <div class="row row-no-gutters">
                                <fieldset class="col-sm-6 border m-r-5">
                                    <legend>Origin Address</legend>
                                    <div class="form-group row">
                                        <label for="OriginAddrs" class="col-sm-2 col-form-label">Address1</label>
                                        <div class="col-sm-10">
                                            @Html.TextAreaFor(a => a.OrgAdd1, new { @class = "form-control input-sm", rows = "3", placeholder = "Address 1", title = "OriginAddrs1", @id = "OriginAddrs1", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="OriginAddrs" class="col-sm-2 col-form-label">Address2</label>
                                        <div class="col-sm-10">
                                            @Html.TextAreaFor(a => a.OrgAdd2, new { @class = "form-control input-sm", rows = "3", placeholder = "Address 2", title = "OriginAddrs2", @id = "OriginAddrs2", @readonly = "readonly" })
                                            
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="DestCityDropDown" class="col-sm-2 col-form-label">City</label>
                                        <div class="col-sm-10">
                                            @Html.TextBoxFor(a => a.OrgCity, new { @class = "form-control input-sm", placeholder = "City", title = "City", @id = "OriginCity", @readonly = "readonly" })
                                            @*@Html.DropDownListFor(a => a.OrgCityID, new SelectList((System.Collections.IEnumerable)ViewData["CityList"], "Value", "Text", ViewData["DestCityID"]), "--Select One--", new { @class = "form-control enableselect", id = "OrgCityDropDown", title = "OrgCityDropDown" })*@
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="" class="col-sm-1 col-form-label">Pincode</label>
                                        <div class="col-sm-2">
                                            @Html.TextBoxFor(a => a.OrgPincode, new { @class = "form-control input-sm", placeholder = "Pincode", title = "OrgPincode", @id = "OrgPincode", onkeypress = "return OnlyInteger(this, event);", @readonly = "readonly" })
                                            
                                        </div>
                                        <label for="" class="col-sm-1 col-form-label">Email</label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(a => a.OrgEmail, new { @class = "form-control input-sm", placeholder = "Email", title = "OrgEmail", @id = "OrgEmail", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="" class="col-sm-1 col-form-label">Phone</label>
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(a => a.OrgPhone, new { @class = "form-control input-sm", placeholder = "Origin Phone", title = "OrgPhone", @id = "OrgPhone", @readonly = "readonly" })
                                            
                                        </div>
                                        <label for="" class="col-sm-1 col-form-label">Mobile</label>
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(a => a.OrgMobile, new { @class = "form-control input-sm", placeholder = "Origin Mobile", title = "OrgMobile", @id = "OrgMobile", onkeypress = "return OnlyInteger(this, event);", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset class="col-sm-6 border">
                                    <legend>Destination Address</legend>
                                    <div class="form-group row">
                                        <label for="DestAddrss" class="col-sm-2 col-form-label">Address</label>
                                        <div class="col-sm-10">
                                            @Html.TextAreaFor(a => a.DestAdd1, new { @class = "form-control input-sm", rows = "3", placeholder = "Address 1", title = "DestAddrss1", @id = "DestAddrss1", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="DestAddrss" class="col-sm-2 col-form-label">Address</label>
                                        <div class="col-sm-10">
                                            @Html.TextAreaFor(a => a.DestAdd2, new { @class = "form-control input-sm", rows = "3", placeholder = "Address 2", title = "DestAddrss1", @id = "DestAddrss2", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="DestCityDropDown" class="col-sm-2 col-form-label">City</label>
                                        <div class="col-sm-10">
                                            @*@Html.DropDownListFor(a => a.DestCityID, new SelectList((System.Collections.IEnumerable)ViewData["CityList"], "Value", "Text", ViewData["DestCityID"]), "--Select One--", new { @class = "form-control enableselect", id = "DestCityDropDown", title = "DestCityDropDown" })*@
                                            @Html.TextBoxFor(a => a.DestCity, new { @class = "form-control input-sm", placeholder = "City", title = "City", @id = "DestCity", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="" class="col-sm-1 col-form-label">Pincode</label>
                                        <div class="col-sm-3">
                                            @Html.TextBoxFor(a => a.DestPincode, new { @class = "form-control input-sm", placeholder = "Pincode", title = "DestPincode", @id = "DestPincode", onkeypress = "return OnlyInteger(this, event);", @readonly = "readonly" })
                                        </div>
                                        <label for="" class="col-sm-1 col-form-label">Email</label>
                                        <div class="col-sm-7">
                                            @Html.TextBoxFor(a => a.DestEmail, new { @class = "form-control input-sm", placeholder = "Email", title = "DestEmail", @id = "DestEmail", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="" class="col-sm-1 col-form-label">Phone</label>
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(a => a.DestPhone, new { @class = "form-control input-sm", placeholder = "Destination Phone", title = "DestPhone", @id = "DestPhone", @readonly = "readonly" })
                                        </div>
                                        <label for="" class="col-sm-1 col-form-label">Mobile</label>
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(a => a.DestMobile, new { @class = "form-control input-sm", placeholder = "Origin Mobile", title = "OrgMobile", @id = "OrgMobile", onkeypress = "return OnlyInteger(this, event);", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

        <fieldset class="col-md-12 m-n pad-none">
            <legend data-toggle="collapse" data-target="#SODetails">
                <i class="more-less glyphicon glyphicon-plus"></i>
                Activities
            </legend>
            <div class="m-t-sm panel-collapse collapse CollapsingFieldSet" id="SODetails">
                <div class="row">
                    <div class="col-sm-12">
                        <table id="tblActivities" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>Activity Type</th>
                                    <th>From Date</th>
                                    <th>To Date</th>
                                    <th>Days</th>
                                    <th>From Location</th>
                                    <th>To Location</th>
                                    <th>Time</th>
                                    <th>Remark</th>
                                </tr>
                            </thead>
                            <tbody style="max-height:150px">
                                @for (var i = 0; i < Model.activities.Count; i++)
                                {

                                    <tr>
                                        <td>
                                            @Html.DisplayFor(a => Model.activities[i].ActivityTypeName, new { htmlAttributes = new { @placeholder = "Activity Type", @tooltip = "Activity Type", @class = "form-control input-sm ActType", title = "Activity Type", @readonly = "readonly" } })
                                            @Html.HiddenFor(x => Model.activities[i].ActivityTypeID, new { @class = "ActivityTypeID" })
                                        </td>
                                        <td>
                                            @Html.DisplayFor(a => Model.activities[i].FromDate, new { htmlAttributes = new { @placeholder = "From Date", @tooltip = "From Date", @class = "form-control input-sm datetimepicker ActFromDate", title = "From Date" } })
                                            
                                        </td>
                                        <td>
                                            @Html.DisplayFor(a => Model.activities[i].ToDate, new { htmlAttributes = new { @placeholder = "To Date", @tooltip = "To Date", @class = "form-control input-sm datetimepicker ActToDate", title = "To Date" } })
                                            
                                        </td>
                                        <td>
                                            @Html.DisplayFor(a => Model.activities[i].NumberOfDays, new { htmlAttributes = new { @placeholder = "Days", @tooltip = "Days", @class = "form-control input-sm  ActDays", title = "Days" } })
                                        </td>
                                        <td>
                                            @Html.DisplayFor(x => Model.activities[i].FromLocation, new { htmlAttributes = new { @class = "form-control input-sm clearfix ActFromLoc" } })
                                            
                                        </td>
                                        <td>
                                            @Html.DisplayFor(x => Model.activities[i].ToLocation, new { htmlAttributes = new { @class = "form-control input-sm clearfix ActToLoc" } })
                                            
                                        </td>
                                        <td>
                                            @Html.DisplayFor(a => Model.activities[i].RepTime, new { htmlAttributes = new { @placeholder = "Rep Time", @tooltip = "Rep Time", @class = "form-control input-sm clearfix timepicker ActRepTime" } })
                                        </td>
                                        <td>
                                            @Html.DisplayFor(x => Model.activities[i].Remark, new { htmlAttributes = new { @class = "form-control input-sm clearfix ActRemark" } })
                                        </td>
                                    </tr>

                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </fieldset>
    
</div>
