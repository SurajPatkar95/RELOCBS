@using PagedList;
@using PagedList.Mvc;
@using GridMvc.Html
@using RELOCBS.App_Code;
@using RELOCBS.Utility;

@model IEnumerable<RELOCBS.Entities.Lane>

@{
    string _PageID = "7";
    bool hasAddAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.ADD);
    bool hasEditAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.EDIT);
    bool hasDeleteAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.DELETE);
}
@Html.Grid(Model).Named("mainGrid").Columns(columns =>
{
columns.Add(o => o.LaneName).Css("col-md-5")
    .Titled("Lane Name")
    .SetWidth(2)
    .SortInitialDirection(GridMvc.Sorting.GridSortDirection.Ascending);

columns.Add(o => o.OriginCountry).Css("col-md-2")
    .Titled("Origin Country");

columns.Add(o => o.DestinationCountry).Css("col-md-2")
    .Titled("Destination Country");

columns.Add(o => o.isActive).Css("col-md-1")
    .Titled("Active")
    .Encoded(false)
    .Sanitized(false)
    .RenderValueAs(d =>
    @<span>
        @if (d.isActive == true)
            {
            <i class="fa fa-check text-navy"></i>
        }
    </span>
        );

    columns.Add().Css("col-md-2")
        .Titled("Actions")
        .Encoded(false)
        .Sanitized(false)
        .Sortable(true)
        .RenderValueAs(d =>
        @<span>
            @if (hasEditAccess)
            {
                <a href="@Url.Action("Edit/" + d.LaneId, "Lane")" class="btnEdit btn btn-xs btn-default glyphicon glyphicon-pencil pull-left" data-toggle="modal" data-target="#mdlAddEdit" data-cache="false" title=I18N("Edit Lane")></a>
            }
            @if (d.isActive == true && hasDeleteAccess)
            {
                <div class="pull-left">
                    <form method="post" action="@Url.Action("Delete/" + d.LaneId, "Lane")" class="frmRWDelete" title="Delete Lane">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="LaneId" value="@d.LaneId" />
                        <button type="submit" class="btnDelete btn btn-xs btn-danger glyphicon glyphicon-trash marl-5"></button>
                    </form>
                </div>
            }
        </span>
    );
}).Sortable()

<div class="clearfix pnl-pagination">
    <div class="pull-right">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { MaximumPageNumbersToDisplay = 4, DisplayPageCountAndCurrentLocation = true }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "mgrid", OnComplete = "PagedOnComplete" }))
        @if (Model.Count() == 0)
        {
            <div class="pagination-container hidden"><ul class="pagination"><li class="active"><a>1</a></li></ul></div>
        }
    </div>
</div>
