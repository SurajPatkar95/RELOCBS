@model RELOCBS.Entities.EmployeeWages

@{
    //Layout = null;
    ViewBag.Title = "Edit Employee Wages";
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">@ViewBag.Title</h4>
</div>
@using (Html.BeginForm("Edit", "EmployeeWages", FormMethod.Post, new { enctype = "multipart/form-data", id = "ModelForm" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-body">
        <div class="row">
            <div class="col-sm-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EmpID)
                <div class="form-group row">
                    <label class="control-label col-md-2 col-md-offset-1 requiredlabel">Name</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="control-label col-md-2 col-md-offset-1 requiredlabel">EmpCode</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CardEmpCode, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.CardEmpCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <label class="control-label col-md-2 col-md-offset-1 requiredlabel">Designation</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.DesignationID, new SelectList((System.Collections.IEnumerable)ViewData["DesignationList"], "Value", "Text"), "Select One", new { @class = "form-control ", title = "Designation", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.DesignationID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control input-sm"} })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="control-label col-md-2 col-md-offset-1 requiredlabel">Day Rate</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.SalaryAmt, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.SalaryAmt, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="control-label col-md-2 col-md-offset-1 requiredlabel">OT Rate</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.OtherAmt, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.OtherAmt, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <div class="pull-right">
            <input type="submit" value="Save" class="btn btn-primary btn-sm" id="btnCreate" />
            <input type="button" class="btn btn-primary btn-sm" data-dismiss="modal" value="Close">
        </div>
    </div>

}

<script type="text/javascript">
        $(document).ready(function () {
            $("[data-val-required]").each(function () {
                $("label[for=" + this.id + "]").addClass("requiredlabel")
            });
        });
</script>
<script type="text/javascript">
    
        $(document).ready(function () {

            $("input").attr("autocomplete", "off");

            $('.datetimepicker').datetimepicker({
                format: "DD-MMM-YYYY",
                sideBySide: true,
                widgetPositioning: {
                    vertical: 'bottom'
                }

            });



        });
</script>
<script>
        $(document).ready(function () {

            $("input").attr("autocomplete", "off");

            var form = $("#mdlAddEdit form");
            form.removeData('validator');
            form.removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse(form);

            $('#mdlAddEdit').on('shown.bs.modal', function () {
                //$('#EmpName').focus();
            });
            $('#mdlAddEdit form').on('submit', function (e) {
                e.preventDefault();
                if (!$(this).valid()) { return; }

                $('#mdlAddEdit .modal-content').mask("Loading...");
                $(this).ajaxSubmit({
                    target: '#mdlAddEdit .modal-content',
                    success: function (data) {
                        $('#mdlAddEdit .modal-content').html(data.Result);
                        if (data.Success) {
                            $('#mgrid .pagination li.active a').trigger('click');
                            toastr.success("Employee wages updated successfully.");
                            $('#mdlAddEdit').modal('hide');
                        }
                        $('#mdlAddEdit .modal-content').unmask();
                    }
                });
            });
        });
</script>