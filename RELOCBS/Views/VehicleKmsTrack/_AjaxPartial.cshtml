@using RELOCBS.Utility;
@using RELOCBS.App_Code;
@using RELOCBS.Common;
@using PagedList;
@using PagedList.Mvc;
@using GridMvc.Html

@model StaticPagedList<RELOCBS.Entities.VehicleKmsGrid>

@{
    
    string _PageID = "68";
    bool hasAddAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.ADD);
    bool hasEditAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.EDIT);
    bool hasDeleteAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.DELETE);
    bool hasViewAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.VIEW);
}

@Html.Grid(Model).Named("mainGrid").Columns(columns =>
{
columns.Add(o => o.VehicleKmsID)
.Titled("VehicleKmsID")
.Css("col-md-1")
.SetWidth(2);
columns.Add(o => o.BranchName)
.Titled("Branch")
.Css("col-md-2")
.SetWidth(2);
columns.Add(o => o.VehicleNo)
.Titled("VehicleNo")
.Css("col-md-2")
.SetWidth(2);

columns.Add(o => o.OdometerDate)
.Css("col-md-2")
.Titled("OdometerDate").Format("{0:dd-MMM-yyyy}")
.SetWidth(10);

columns.Add(o => o.StartOdometer)
.Css("col-md-1")
.Titled("StartOdometer")
.SetWidth(10);

columns.Add(o => o.EndOdometer)
.Css("col-md-1")
.Titled("EndOdometer")
.SetWidth(10);
columns.Add(o => o.TotalOdometer)
.Css("col-md-1")
.Titled("TotalOdometer")
.SetWidth(10);
columns.Add(o => o.CreatedDate)
.Css("col-md-3")
.Titled("LastModifiedDate").Format("{0:dd-MMM-yyyy}")
.SetWidth(10);

columns.Add(o => o.CreatedBy)
.Css("col-md-3")
.Titled("LastModifiedBy")
.SetWidth(10);

columns.Add()
.Encoded(false)
.Sanitized(false)
.Sortable(true)
.Css("col-md-2").Titled("Actions")
.RenderValueAs(d =>
@<span>
    @if (hasEditAccess)
     {
            <a href="@Url.Action("Create", "VehicleKmsTrack",new { Id = d.VehicleKmsID})" class="btnEdit btn btn-xs btn-default glyphicon glyphicon-pencil pull-left" target="_blank" title="Edit Report"></a>
     }
    

    @*@if (hasViewAccess)
    {
        <a href="@Url.Action("GetLoadChartPrint", "LoadChart", new { LoadChartID = d.LoadChartID })" class="btn btn-primary btn-xs View m-l-sm" title="Print LoadChart" target="_blank"><i class='glyphicon glyphicon-print'></i></a>
    }*@
    
    @if (hasDeleteAccess)
    {
            <div class="pull-left">
                <form method = "post" action="@Url.Action("Delete/" + d.VehicleKmsID, "VehicleKmsTrack")" class="frmRWDelete" title="Delete">
                    @Html.AntiForgeryToken()
                    <input type = "hidden" name="VehicleKmsID" value="@d.VehicleKmsID" />
                    <button type = "submit" class="btnDelete btn btn-xs btn-danger glyphicon glyphicon-trash marl-5"></button>
                </form>
            </div>
    }


</span>
);

}).Sortable()

<div class="clearfix pnl-pagination">
    <div class="pull-right">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { MaximumPageNumbersToDisplay = 4, DisplayPageCountAndCurrentLocation = true }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "mgrid", OnComplete = "PagedOnComplete" }))
        @if (Model.Count() == 0)
        {
            <div class="pagination-container hidden"><ul class="pagination"><li class="active"><a>1</a></li></ul></div>
        }
    </div>
</div>