@model IEnumerable<RELOCBS.Entities.Vendor>
@using RELOCBS.Utility;
@using RELOCBS.App_Code;
@using PagedList;
@using PagedList.Mvc;
@using GridMvc.Html
@{

    string _PageID = "22";
    bool hasAddAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.ADD);
    bool hasEditAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.EDIT);
    bool hasDeleteAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.DELETE);
}
@Html.Grid(Model).Named("mainGrid").Columns(columns =>
{

columns.Add(o => o.Vendor_RefCode)
    .Titled("Ref.Code")
    .Css("col-md-3")
    .SetWidth(2)
    .SortInitialDirection(GridMvc.Sorting.GridSortDirection.Ascending);

columns.Add(o => o.Vendor_Name)
.Titled("Vendor Name").Css("col-md-3")
.SortInitialDirection(GridMvc.Sorting.GridSortDirection.Ascending);

columns.Add(o => o.CONTACT_PERSON)
    .Css("col-md-3")
    .Titled("Contact Person")
    .SetWidth(10);
    columns.Add(o => o.Oper_MailID)
    .Css("col-md-3")
    .Titled("Operation Mail")
    .SetWidth(10);
    columns.Add(o => o.CONTACT_NUMBER)
    .Css("col-md-3")
    .Titled("Contact No.")
    .SetWidth(10);

columns.Add(o => o.IsActive)
    .Titled("Active").Css("col-md-1")
    .Encoded(false)
    .Sanitized(false)
    .RenderValueAs(d =>
    @<span>
        @if (d.IsActive == true)
        {
            <i class="fa fa-check text-navy"></i>
        }
    </span>
    );

columns.Add()
    .Encoded(false)
    .Sanitized(false)
    .Sortable(true)
    .Css("col-md-2").Titled("Actions")
    .RenderValueAs(d =>@<span>
        @if (hasEditAccess)
        {
            <a href="@Url.Action("Edit/" + d.Vendor_ID, "Vendor")" class="btnEdit btn btn-xs btn-default glyphicon glyphicon-pencil pull-left" data-toggle="modal" data-target="#mdlAddEdit" data-cache="false" title="Edit Vendor"></a>
        }
        @if (d.IsActive == true && hasDeleteAccess)
        {
            <div class="pull-left">
                <form method="post" action="@Url.Action("Delete/" + d.Vendor_ID, " Vendor")" class="frmRWDelete" title="Delete Vendor">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="Vendor_ID" value="@d.Vendor_ID" />
                    <button type="submit" class="btnDelete btn btn-xs btn-danger glyphicon glyphicon-trash marl-5 m-n m-l-md"></button>
                </form>
            </div>
        }
        </span>
    );
}).Sortable()

<div class="clearfix pnl-pagination">
    <div class="pull-right">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { MaximumPageNumbersToDisplay = 4, DisplayPageCountAndCurrentLocation = true }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "mgrid", OnComplete = "PagedOnComplete" }))
        @if (Model.Count() == 0)
        {
            <div class="pagination-container hidden"><ul class="pagination"><li class="active"><a>1</a></li></ul></div>
        }
    </div>
</div>
