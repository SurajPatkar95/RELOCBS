@model RELOCBS.Entities.CountryViewModel

@{
    ViewBag.Title = "New Country";
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">@ViewBag.Title</h4>
</div>

@using (Html.BeginForm("Create", "Country", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="modal-body">
        <div class="row">
            <div class="col-sm-12">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group row">
                    @Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CountryCode, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CountryName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.CountryName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Continent, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-2 requiredlabel" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(model => model.ContinentID, new SelectList((System.Collections.IEnumerable)ViewData["Continent"], "Value", "Text"), "Select Continent", new { @class = "form-control input-sm clearfix" })
                        @Html.ValidationMessageFor(model => model.ContinentID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-offset-2">
                        <div class="col-md-5">
                            @Html.CheckBoxFor(model => model.isActive, new { htmlAttributes = new { @class = "form-control input-sm" } }) Active
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <div class="pull-right">
            <input type="submit" value="Save" class="btn btn-primary btn-sm" id="btnCreate" />
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $("[data-val-required]").each(function () {
            $("label[for=" + this.id + "]").addClass("requiredlabel")
        });
    });
</script>
<script>
    $(document).ready(function () {

        $("input").attr("autocomplete", "off");

        var form = $("#mdlAddEdit form");
        form.removeData('validator');
        form.removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse(form);


        $('#mdlAddEdit').on('shown.bs.modal', function () {
            $('#CountryCode').focus();
        });

        @*$('body').on('change', '#CountryID', function (e) {
            var CountryID = $(this).val();
            $("select#StateID").empty();
            $('#StateID').append($('<option>', {
                value: 0,
                text: 'Select State'
            }));
            $.ajax({
                url: "@Url.Action("GetState", "City")?CountryID=" + CountryID,
                success: function (data) {
                    var data = $.map(data, function (obj) {
                        obj.text = obj.text || obj.Text;
                        obj.id = obj.id || obj.Value;
                        return obj;
                    });
                    $('select#StateID').select2({ data: data });
                }
            });
        });*@


        AutoDropFill();
        $('#mdlAddEdit form').on('submit', function (e) {
            e.preventDefault();
            if (!$(this).valid()) { return; }

            $('#mdlAddEdit .modal-content').mask("Loading...");
            $(this).ajaxSubmit({
                target: '#mdlAddEdit .modal-content',
                success: function (data) {
                    $('#mdlAddEdit .modal-content').html(data.Result);
                    if (data.Success) {
                        $('#mgrid .pagination li.active a').trigger('click');
                        toastr.success("Country saved successfully.");
                        $('#mdlAddEdit').modal('hide');
                    }
                    $('#mdlAddEdit .modal-content').unmask();
                }
            });
        });
        function AutoDropFill() {
            var returnResult = [];
            $.ajax({
                contentType: "application/json; charset=utf-8",
                url: "@Url.Action("GetAutoPopulateList", "Country")",
                method: 'GET',
            async: 'false',
            dataType: 'json',
            success: function (result) {
                var data = $.map(result, function (obj) {
                    obj.value = obj.Text; // desired field
                    obj.data = obj.Value; // desired field
                    returnResult.push(obj);
                    $("#CountryName").autocomplete({
                        lookup: returnResult
                    });

                });
            },
            error: function () { }
        });
    }

    });

</script>