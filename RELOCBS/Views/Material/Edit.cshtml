@model RELOCBS.Entities.Material

@{
    ViewBag.Title = "Edit Material";

}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">@ViewBag.Title</h4>
</div>

@using (Html.BeginForm("Edit", "Material", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="modal-body">
        <div class="row">
            <div class="col-sm-12">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.MaterialID)
                <div class="form-group row">
                    @Html.LabelFor(model => model.MaterialCode, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.MaterialCode, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.MaterialCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.MaterialName, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.MaterialName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.MaterialName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.MaterialDescription, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.MaterialDescription, new { htmlAttributes = new { @class = "form-control input-sm" } })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Measurement, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Measurement, new { htmlAttributes = new { @class = "form-control input-sm" } })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control input-sm" } })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.MinQty, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.MinQty, new { htmlAttributes = new { @class = "form-control input-sm" } })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.ReOrderQty, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.ReOrderQty, new { htmlAttributes = new { @class = "form-control input-sm" } })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-offset-2">
                        <div class="col-md-5">
                            @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control input-sm" } }) Active
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <div class="pull-right">
            <input type="submit" value="Save" class="btn btn-primary btn-sm" id="btnCreate" />
        </div>
    </div>
}

<script>
                $(document).ready(function () {
                    $("[data-val-required]").each(function () {
                        $("label[for=" + this.id + "]").addClass("requiredlabel")
                    });
                });
</script>
<script>
                $(document).ready(function () {

                    $("input").attr("autocomplete", "off");

                    var form = $("#mdlAddEdit form");
                    form.removeData('validator');
                    form.removeData('unobtrusiveValidation');
                    $.validator.unobtrusive.parse(form);

                    $('#mdlAddEdit').on('shown.bs.modal', function () {
                        $('#ShipLineName').focus();
                    });
                    $('#mdlAddEdit form').on('submit', function (e) {
                        e.preventDefault();
                        if (!$(this).valid()) { return; }

                        $('#mdlAddEdit .modal-content').mask("Loading...");
                        $(this).ajaxSubmit({
                            target: '#mdlAddEdit .modal-content',
                            success: function (data) {
                                $('#mdlAddEdit .modal-content').html(data.Result);
                                if (data.Success) {
                                    $('#mgrid .pagination li.active a').trigger('click');
                                    toastr.success("Material updated successfully.");
                                    $('#mdlAddEdit').modal('hide');
                                }
                                $('#mdlAddEdit .modal-content').unmask();
                            }
                        });
                    });
                });
</script>
