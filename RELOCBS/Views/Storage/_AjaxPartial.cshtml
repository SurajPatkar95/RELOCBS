@using RELOCBS.Utility;
@using RELOCBS.App_Code;
@using PagedList;
@using PagedList.Mvc;
@using GridMvc.Html

@model IPagedList<RELOCBS.Entities.JobStorageGrid>

@{

    string _PageID = "29";
    bool hasAddAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.ADD);
    bool hasEditAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.EDIT);
    bool hasDeleteAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.DELETE);
}

@Html.Grid(Model).Named("mainGrid").Columns(columns =>
{

columns.Add(o => o.JobNo)
    .Titled("JobNo")
    .Css("col-md-2")
    .SetWidth(2)
    .SortInitialDirection(GridMvc.Sorting.GridSortDirection.Ascending);

columns.Add(o => o.JobDate)
.Titled("JobDate").Css("col-md-1").Format("{0:dd-MMM-yyyy}");

columns.Add(o => o.QuotationID)
.Titled("QuotationID").Css("col-md-1");

//columns.Add(o => o.Controller)
//.Titled("Controller").Css("col-md-1");

//columns.Add(o => o.JobCommodity)
//.Titled("Commodity").Css("col-md-2");
    
columns.Add(o => o.ServiceLine)
.Titled("ServiceLine").Css("col-md-2");

columns.Add(o => o.ShipperName)
.Titled("Shipper").Css("col-md-2");

columns.Add(o => o.Corporate)
.Titled("Corporate").Css("col-md-1");

columns.Add(o => o.Client)
.Titled("Client").Css("col-md-2");

columns.Add(o => o.Warehouse)
.Titled("Warehouse").Css("col-md-2");

columns.Add(o => o.StorageEntryDate)
.Titled("StorageEntryDate").Css("col-md-1").Format("{0:dd-MMM-yyyy}");

columns.Add(o => o.StorageExitDate)
.Titled("StorageExitDate").Css("col-md-1").Format("{0:dd-MMM-yyyy}");

columns.Add(o => o.BillStartDate)
.Titled("BillStartDate").Css("col-md-1").Format("{0:dd-MMM-yyyy}");

columns.Add()
.Encoded(false)
.Sanitized(false)
.Sortable(true)
.Css("col-md-2").Titled("Actions")
.RenderValueAs(d =>
    @<span>
        @if (hasEditAccess)
        {
            <a href="@Url.Action("Create", "Storage",new { MoveID = d.MoveID, StorageID = d.StorageID,Index=0 })" class="btnEdit btn btn-xs btn-default glyphicon glyphicon-pencil pull-left" title="Edit Storage"></a>
        }
    </span>
    );
}).Sortable()

<div class="clearfix pnl-pagination">
    <div class="pull-right">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { MaximumPageNumbersToDisplay = 4, DisplayPageCountAndCurrentLocation = true }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "mgrid", OnComplete = "PagedOnComplete" }))
        @if (Model.Count() == 0)
        {
            <div class="pagination-container hidden"><ul class="pagination"><li class="active"><a>1</a></li></ul></div>
        }
    </div>
</div>