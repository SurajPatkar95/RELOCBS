@model IEnumerable<RELOCBS.Entities.BranchSurveyorMappingGrid>
@using RELOCBS.Utility;
@using RELOCBS.App_Code;
@using PagedList;
@using PagedList.Mvc;
@using GridMvc.Html
@{
    
    string _PageID = "21";
    bool hasAddAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.ADD);
    bool hasEditAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.EDIT);
    bool hasDeleteAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.DELETE);
}
@Html.Grid(Model).Named("mainGrid").Columns(columns =>
{

columns.Add(o => o.EmployeeId)
    .Titled("Employee ID")
    .Css("col-md-3")
    .SetWidth(2);


columns.Add(o => o.EmployeeName)
.Titled("Employee Name").Css("col-md-3");

columns.Add(o => o.BranchName)
    .Css("col-md-3")
    .Titled("Branch")
    .SetWidth(10);

columns.Add(o => o.FromDate)
    .Css("col-md-3")
    .Titled("FromDate")
    .SetWidth(10);

columns.Add()
.Encoded(false)
.Sanitized(false)
.Sortable(true)
.Css("col-md-2").Titled("Actions")
.RenderValueAs(d =>
@<span>

    @if (hasAddAccess || hasEditAccess)
    {
      <a href="@Url.Action("UpdateSurveyorBranch/" + d.EmployeeId, "Employee")" class="btnWHMapping btn btn-xs btn-default pull-left" data-toggle="modal" data-cache="false" data-target="#mdlAddEdit" title="WHM-apping" onclick="EmpPopUp(this)"><i class="fas fa-warehouse" aria-hidden="true"></i></a>
    }
    
</span>
);
    }).Sortable()

<div class="clearfix pnl-pagination">
    <div class="pull-right">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("SurveyorBranch", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { MaximumPageNumbersToDisplay = 4, DisplayPageCountAndCurrentLocation = true }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "mgrid", OnComplete = "PagedOnComplete" }))
        @if (Model.Count() == 0)
        {
            <div class="pagination-container hidden"><ul class="pagination"><li class="active"><a>1</a></li></ul></div>
        }
    </div>
</div>


