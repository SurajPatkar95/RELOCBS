@using RELOCBS.Utility;
@using RELOCBS.App_Code;
@using PagedList;
@using PagedList.Mvc;
@using GridMvc.Html

@model StaticPagedList<RELOCBS.Entities.CreditApprovalGrid>

@{

    string _PageID = "65";
    bool hasAddAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.ADD);
    bool hasEditAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.EDIT);
    bool hasDeleteAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.DELETE);
    bool hasViewAccess = UserSession.HasPermission(_PageID, EnumUtility.PageAction.VIEW);
}

@Html.Grid(Model).Named("mainGrid").Columns(columns =>
{
columns.Add(o => o.CreditLimitEntityID)
.Titled("ID")
.Css("col-md-2")
.SortInitialDirection(GridMvc.Sorting.GridSortDirection.Ascending);
columns.Add(o => o.CorporateName)
.Titled("CorporateName")
.Css("col-md-2");
//.SortInitialDirection(GridMvc.Sorting.GridSortDirection.Ascending);


columns.Add(o => o.Addresss)
.Titled("Address")
.Css("col-md-2");

columns.Add(o => o.City)
.Titled("City")
.Css("col-md-2");

columns.Add(o => o.Cust_Contact_Name)
.Titled("Contact Name")
.Css("col-md-2");


//columns.Add(o => o.SurveyDateTime)
//.Titled("Survey Time").Css("col-md-1");

columns.Add(o => o.Cust_Contact_Number)
.Titled("Contact Number").Css("col-md-3");

columns.Add(o => o.Cust_Contact_Email)
.Titled("Contact Email").Css("col-md-3");


columns.Add(o => o.Cust_Contact_Designation)
.Titled("Contact Designation").Css("col-md-3");
columns.Add(o => o.Status)
.Titled("Status").Css("col-md-3");

columns.Add().
Encoded(false).Sanitized(false).Sortable(true).Css("col-md-2").RenderValueAs(d =>
@<span>
  @if (hasAddAccess || hasEditAccess)
  {
      if (d.CreditLimitEntityID > 0)
      {
          <a href="@Url.Action("Create", "CreditApproval", new { index = 0, EntityID = d.CreditLimitEntityID })" class="btn btn-xs btn-default pull-left" title="Edit" target="_blank">
             <i class="fa fa-edit"></i>
          </a>
      }
  }

  @if (hasViewAccess)
  {
      if (d.CreditLimitEntityID > 0)
      {
          <a href="@Url.Action("GetCFAPrint", "CreditApproval", new {  Id = d.CreditLimitEntityID })" class="btn btn-xs btn-primary pull-left" title="Print" target="_blank">
             <i class="fa fa-print"></i>
          </a>
      }
  }
</span>
);

}).Sortable()

<div class="clearfix pnl-pagination">
    <div class="pull-right">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { MaximumPageNumbersToDisplay = 4, DisplayPageCountAndCurrentLocation = true }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "mgrid", OnComplete = "PagedOnComplete" }))
        @if (Model.Count() == 0)
        {
            <div class="pagination-container hidden"><ul class="pagination"><li class="active"><a>1</a></li></ul></div>
        }
    </div>
</div>
